{"version":3,"sources":["helpers/cli.ts","helpers/request.ts","main.ts"],"names":[],"mappings":";AAIa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IADA,QAAA,SAAY,CAAA,GAAgB,QAAQ,KAAK,WAAW,SAAS,IAC7D,QAAA,cAAgB,EAAC,EAAa,GAAU,EAAM,EAAO,CAAA,GAAK,MACjE,GAAA,QAAQ,KAAK,WAAW,SAAS,GAAI,CACjC,MAAA,EAAwB,QAAQ,KAAK,QAAQ,KAAK,QAAQ,GAAK,GACjE,OAAC,EAGD,EAAsB,SAAS,MAC1B,EAEF,EAAK,GALH,EAOJ,OAAA;;ACXT,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAJA,MAAA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,MACA,EAAA,QAAA,SAEA,SAAgB,IACP,OAAA,IAAI,QAAQ,CAAC,EAAS,KAC3B,EAAA,QAAQ,KACN,CACE,IAAK,EAAA,cAAc,QAAS,6BAA8B,GAAK,OAAO,IACtE,SAAU,CACR,KAAM,EAAA,iBAAiB,EAAA,cAAc,YAGzC,CAAC,EAAO,EAAU,KACZ,GAAA,EACK,OAAA,EAAO,GAEhB,EAAQ,OAbhB,QAAA,QAAA;;ACGI,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAPJ,MAAA,EAAA,QAAA,qBAEA,SAAe,IAKX,OAAA,EAAA,UAAA,OAAA,EAAA,YAJI,MAAA,QAAa,EAAA,UACnB,QAAQ,IAAI,KAGd","file":"main.js","sourceRoot":"../src","sourcesContent":["\nexport type Commands = '--add' | '--deploy' | '--url';\n\nexport const includes = (i: Commands) => process.argv.toString().includes(i);\nexport const nextOrDefault = (i: Commands, fb: any = true, type = p => p) => {\n  if (process.argv.toString().includes(i)) {\n    const isNextArgumentPresent = process.argv[process.argv.indexOf(i) + 1];\n    if (!isNextArgumentPresent) {\n      return fb;\n    }\n    if (isNextArgumentPresent.includes('--')) {\n      return fb;\n    }\n    return type(isNextArgumentPresent);\n  }\n  return fb;\n};\n","import request from 'request';\nimport { createReadStream } from 'fs';\nimport { nextOrDefault } from './cli';\n\nexport function Request() {\n  return new Promise((resolve, reject) => {\n    request.post(\n      {\n        url: nextOrDefault('--url', 'http://0.0.0.0:9000/upload', v => String(v)),\n        formData: {\n          file: createReadStream(nextOrDefault('--add')),\n        },\n      },\n      (error, response, body) => {\n        if (error) {\n          return reject(error);\n        }\n        resolve(body);\n      }\n    );\n  });\n}\n","import { Request } from './helpers/request';\n\nasync function Main() {\n  const body = await Request();\n  console.log(body);\n}\n\nMain();\n"]}